<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		<context:component-scan base-package="com.example.board" />
		<!-- <bean class="com.example.board.common.LogAdvice" id="logAdvice" />
		<bean class="com.example.board.common.NewLogAdvice" id="newLogAdvice"></bean>
		<bean class="com.example.board.common.AfterThrowingLog" id="afterThrowingLog"></bean>
		<bean class="com.example.board.common.RoundAdvice" id="roundAdvice"></bean> -->
		
		<bean class="com.example.board.common.TotalAdvice" id="totalAdvice"></bean>
		
		<bean class="com.zaxxer.hikari.HikariConfig" id="hikariConfig">
			<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
			<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.150.55:1521:xe" />
			<property name="username" value="byeon" />
			<property name="password" value="byeon" />
		</bean>
		
		<bean class="com.zaxxer.hikari.HikariDataSource" id="dataSource">
			<constructor-arg ref="hikariConfig" />
		</bean>
		
		<bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
			<property name="dataSource" ref="dataSource"></property>
		</bean>
		
		<aop:aspectj-autoproxy proxy-target-class="true"/>
		
		<aop:config>
			<aop:pointcut expression="execution(* com.example.board..*Impl.*(..))" id="allPointCut"/>
			<aop:pointcut expression="execution(* com.example.board.service.*Impl.get*(..))" id="getPointCut"/>
			<aop:aspect ref="totalAdvice" >
				<aop:before method="beforeLog" pointcut-ref="allPointCut"/>
			</aop:aspect>
			
			<aop:aspect ref="totalAdvice">
				<aop:after-throwing method="afterReturningLog" pointcut-ref="allPointCut"/>
			</aop:aspect>
			
			<aop:aspect ref="totalAdvice">
				<aop:after method="afterLog" pointcut-ref="allPointCut"/>
			</aop:aspect>
			
			<aop:aspect ref="totalAdvice">
				<aop:around method="roundLog" pointcut-ref="allPointCut"/>
			</aop:aspect>
			
			<aop:aspect ref="totalAdvice">
				<aop:after-returning method="afterReturningLog" pointcut-ref="allPointCut"/>
			</aop:aspect>
		</aop:config>
</beans>
